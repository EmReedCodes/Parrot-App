@import './_funcs';

$colors: ();

// short circuit for checking if 900s have been set
// https://stackoverflow.com/a/13237776

$primary-50  : null !default;
$secondary-50: null !default;


$prefix-primary  : "primary" !default;
$prefix-secondary: "secondary" !default;

//if primary-50 declared (user var)
@if $primary-50 != null {
  
  $_primary: (
    $prefix-primary: (
      "50": $primary-50,
      "100": $primary-100,
      "200": $primary-200,
      "300": $primary-300,
      "400": $primary-400,
      "500": $primary-500,
      "600": $primary-600,
      "700": $primary-700,
      "800": $primary-800,
      "900": $primary-900
  ));
  $colors: map-merge($colors, $_primary);
}

// if overriding and secondary-50 declared (user var)
@if $override-secondary and $secondary-50 != null  {

  $_secondary: (
    $prefix-secondary: (
      "50": $secondary-50,
      "100": $secondary-100,
      "200": $secondary-200,
      "300": $secondary-300,
      "400": $secondary-400,
      "500": $secondary-500,
      "600": $secondary-600,
      "700": $secondary-700,
      "800": $secondary-800,
      "900": $secondary-900
  ));
  $colors: map-merge($colors, $_secondary);
}

// @debug inspect(#{$colors});

@each $colorName, $colorGroup in $colors {
  @each $number, $color in $colorGroup {
    $inverse: findColorInvert($color);

    .#{$colorName}-#{$number} {
      background: $color;
      color: $inverse;
    }

    .text-#{$colorName}-#{$number} {
      color: $color;
    }

    root {
      --#{$colorName}-#{$number}: #{$color};
      --#{$colorName}-#{$number}-inverse: #{$inverse};
    }
  }

  $primary-color: map-get($colorGroup, "500");
  .#{$colorName} {
    background: $primary-color;
  }
  root {
    --#{$colorName}: #{$primary-color};
    --#{$colorName}-inverse: #{findColorInvert($primary-color)};
  }

}